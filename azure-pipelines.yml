# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  tagName: '$(Build.BuildNumber)'
  repoName: 'identityserver'
  stableImageName: '$(dockerId)/$(repoName):stable'
  latestImageName: '$(dockerId)/$(repoName):latest'
  branchImageName: '$(dockerId)/$(repoName):$(Build.SourceBranchName)'
  imageName: '$(dockerId)/$(repoName):$(tagName)'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 3.1.x
            
- script: dotnet --info
  displayName: 'dotnet info'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: docker build -f ./src/Skoruba.IdentityServer4.STS.Identity/Dockerfile -t $(imageName) -t $(branchImageName) -t $(latestImageName) -t $(stableImageName) .
  displayName: 'docker build'

- script: |
    docker login -u $(dockerId) -p $(pswd)
    docker push $(imageName)
    docker push $(branchImageName)
  displayName: 'Push docker image'

- script: |
    docker push $(latestImageName)
  displayName: 'Push latest image'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))

- script: docker push $(stableImageName)
  displayName: 'Push stable image'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

# - task: SSH@0
#   displayName: 'Run shell inline on remote machine'
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
#   inputs:
#     sshEndpoint: 'weihanli-vm'
#     runOptions: inline

#     inline: |
#       kubectl set image deployment/identity-server identity-server=$(imageName) --record=true
